// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
// method1:
/*    Not(in = sel[0], out = notsel0);
    Not(in = sel[1], out = notsel1);
    Not(in = sel[2], out = notsel2);

    And(a = notsel1, b = notsel0, out = sel00);
    And(a = notsel1, b = sel[0], out = sel01);
    And(a = sel[1], b = notsel0, out = sel10);
    And(a = sel[1], b = sel[0], out = sel11);

    // output_a
    And(a = notsel2, b = sel00, out = sel000);
    And(a = in, b = sel000, out = a);

    // output_b
    And(a = notsel2, b = sel01, out = sel001);
    And(a = in, b = sel001, out = b);

    // output_c
    And(a = notsel2, b = sel10, out = sel010);
    And(a = in, b = sel010, out = c);

    // output_d
    And(a = notsel2, b = sel11, out = sel011);
    And(a = in, b = sel011, out = d);

    // output_e
    And(a = sel[2], b = sel00, out = sel100);
    And(a = in, b = sel100, out = e);

    // output_f
    And(a = sel[2], b = sel01, out = sel101);
    And(a = in, b = sel101, out = f);

    // output_g
    And(a = sel[2], b = sel10, out = sel110);
    And(a = in, b = sel110, out = g);

    // output_h
    And(a = sel[2], b = sel11, out = sel111);
    And(a = in, b = sel111, out = h);

    // 圖片參考: https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.electronicshub.org%2Fdemultiplexerdemux%2F&psig=AOvVaw0dBHgF1BvpJ9zGUAcQDALa&ust=1668510895009000&source=images&cd=vfe&ved=0CBAQjRxqFwoTCNDfhcvFrfsCFQAAAAAdAAAAABAQ
*/
// method2:
    DMux(in = in, sel = sel[2], a = a0, b = a1);

    DMux(in = a0, sel = sel[1], a = b0, b = b1);
    DMux(in = a1, sel = sel[1], a = b2, b = b3);

    DMux(in = b0, sel = sel[0], a = a, b = b);
    DMux(in = b1, sel = sel[0], a = c, b = d);
    DMux(in = b2, sel = sel[0], a = e, b = f);
    DMux(in = b3, sel = sel[0], a = g, b = h);

  //  圖片參考:https://www.google.com/url?sa=i&url=https%3A%2F%2Fcircuitverse.org%2Fusers%2F35585%2Fprojects%2Fdmux8way-3c4d8759-71ed-4a66-bc22-b240ef07199e&psig=AOvVaw0dBHgF1BvpJ9zGUAcQDALa&ust=1668510895009000&source=images&cd=vfe&ved=0CBAQjRxqFwoTCNDfhcvFrfsCFQAAAAAdAAAAABAj
    //圖片參考:https://www.google.com/url?sa=i&url=https%3A%2F%2Fscrapbox.io%2Fineedhelp%2FDMux8Way&psig=AOvVaw0dBHgF1BvpJ9zGUAcQDALa&ust=1668510895009000&source=images&cd=vfe&ved=0CBAQjRxqFwoTCNDfhcvFrfsCFQAAAAAdAAAAABBK
//*/
}